{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/searchbox/searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","error","alert","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,EAAO,SAACC,GAClB,OACG,sBAAKC,UAAU,iBAAf,UACG,qBACGC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BAEN,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCNdC,EAAW,SAACR,GACtB,OACG,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACtB,uBACGZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCDG,E,kDAzCZ,aAAe,IAAD,8BACX,gBAkBHH,aAAe,SAACI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACVb,SAAU,GACVU,YAAa,IALL,E,qDASd,WAAqB,IAAD,OAEjBI,MADY,8CAERC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,OAC1CC,OAAM,SAACC,GACLC,MAAMD,Q,oBAQf,WACG,MAAkCE,KAAKT,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZa,EAAmBvB,EAASwB,QAAO,SAAC7B,GAAD,OACtCA,EAAQE,KAAK4B,cAAcC,SAAShB,EAAYiB,wBAEnD,OACG,sBAAKnC,UAAU,MAAf,UACG,kDACA,cAAC,EAAD,CACGW,YAAY,iBACZC,aAAckB,KAAKlB,eAEtB,cAAC,EAAD,CAAUJ,SAAUuB,W,GApCdK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf3ae42d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.scss';\n\nexport const Card = (props) => {\n   return (\n      <div className='card-container'>\n         <img\n            alt='monster'\n            src={`https://robohash.org/${props.monster.id}/?set=set4&size=180x180`}\n         />\n         <h2 key={props.monster.id}>{props.monster.name}</h2>\n         <p>{props.monster.email}</p>\n      </div>\n   );\n};\n","import React from 'react';\n\nimport './card-list.scss';\n\nimport { Card } from '../card/card';\n\nexport const CardList = (props) => {\n   return (\n      <div className='card-list'>\n         {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster} />\n         ))}\n      </div>\n   );\n};\n","import React from 'react';\n\nimport './searchbox.scss';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n   <input\n      className='search'\n      type='search'\n      placeholder={placeholder}\n      onChange={handleChange}\n   />\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/searchbox/searchbox';\nclass App extends Component {\n   constructor() {\n      super();\n\n      this.state = {\n         monsters: [],\n         searchField: '',\n      };\n   }\n\n   componentDidMount() {\n      const url = 'https://jsonplaceholder.typicode.com/users';\n      fetch(url)\n         .then((response) => response.json())\n         .then((users) => this.setState({ monsters: users }))\n         .catch((error) => {\n            alert(error);\n         });\n   }\n\n   handleChange = (e) => {\n      this.setState({ searchField: e.target.value });\n   };\n\n   render() {\n      const { monsters, searchField } = this.state;\n      const filteredMonsters = monsters.filter((monster) =>\n         monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      );\n      return (\n         <div className='App'>\n            <h1>Monsters Rolodex</h1>\n            <SearchBox\n               placeholder='search monster'\n               handleChange={this.handleChange}\n            />\n            <CardList monsters={filteredMonsters} />\n         </div>\n      );\n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}